package com.theicecreambear.player;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import com.theicecreambear.gameobject.GameObject;
import com.theicecreambear.interfaces.Drawable;
import com.theicecreambear.interfaces.Updateable;
import com.theicecreambear.item.Item;

public class Player extends GameObject implements Drawable, Updateable {
	
	OverworldPosition owp;
	WorldPosition wp;
	
	public boolean male;
	
	public Player(Coordinate cords, boolean male) {
		
	}
	
	public Player() {
		
	}
	
	public Player() {
		
	}
	// TODO FIX inventory
	ArrayList<Item> bag = new ArrayList<Item>();
	
	@Override
	public void update(long deltaTime) {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void draw(long deltaTime) {
		// TODO Auto-generated method stub
	}
	
	public enum State {
		RIGHTRUN("right", 0),
		LEFTRUN("left", 1),
		DOWNRUN("down", 2),
		UPRUN("up", 3),
		RIGHTWALK("right", 4),
		LEFTWALK("left", 5),
		DOWNWALK("down", 6),
		UPWALK("up", 7);
		
		private static final Map<String, State> NAME_STATE_MAP = new HashMap<String, State>();
		private static final Map<Integer, State> ID_STATE_MAP = new HashMap<Integer, State>();
		private final String direction;
		private final int id;
		State(String direction, int id) {
			this.direction = direction;
			this.id = id;
		}
		
		public String getDirection() {
			return this.direction;
		}
		
		public int getId() {
			return this.id;
		}
		
		public static State getState(String direction) {
			return (State)NAME_STATE_MAP.get(direction);
		}
		
		static {
			for (State state : values()) {
				if (NAME_STATE_MAP.containsKey(state.getDirection()) || ID_STATE_MAP.containsKey(state.getId())) {
					throw new Error("Clash in State ID & Name pools! Cannot insert " + state);
				}
				NAME_STATE_MAP.put(state.getDirection(), state);
				ID_STATE_MAP.put(Integer.valueOf(state.getId()), state);
			}
		}
	}
}